import hashlib, json, os
from hashlib import sha256
from web3 import Web3, HTTPProvider
# from web3.auto import w3
# from interface import ContractInterface
from flask import Flask, escape, request
from datetime import datetime

ROOT_DIR = os.path.dirname(os.path.realpath(__file__))

NANO_COIN_DIR = os.path.abspath('./contracts/NanoCoinAbi.json')
BYTECODE_DIR = os.path.abspath('./contracts/bytecode.json')
# print(NANO_COIN_DIR)

with open(NANO_COIN_DIR, 'r') as file:
    abi = json.load(file)

with open(BYTECODE_DIR, 'r') as file:
    bytecode_json_object = json.load(file)
    bytecode = bytecode_json_object["object"]


# bytecode = '608060405260018054600160a060020a0319908116730d969dcf4327e3fd805831a2cd61460045faf55b17909155600280548216730d6cbff6fbe2b6df536d3770f5b9fbef457d2cd3179055600380549091167327b5419afb9c3d99a262046383e083ae7d81900a17905534801561007657600080fd5b50600154600160a060020a03166000908152602081905260409020633b9aca0090556104b1806100a76000396000f3fe6080604052600436106100b3577c010000000000000000000000000000000000000000000000000000000060003504630b40bd8881146100b85780630c4f65bd1461010f57806318ca4b14146101405780631fd326d11461016757806347d0ec791461017c578063590791f2146101915780637bd703e8146101a657806386cee46c146101d957806396e4ee3d14610203578063bea469e614610233578063cb7978361461025d578063f8b2cb4f14610287575b600080fd5b3480156100c457600080fd5b506100fb600480360360608110156100db57600080fd5b50600160a060020a038135811691602081013590911690604001356102ba565b604080519115158252519081900360200190f35b34801561011b57600080fd5b50610124610352565b60408051600160a060020a039092168252519081900360200190f35b34801561014c57600080fd5b50610155610361565b60408051918252519081900360200190f35b34801561017357600080fd5b5061012461037e565b34801561018857600080fd5b5061015561038d565b34801561019d57600080fd5b506101556103a5565b3480156101b257600080fd5b50610155600480360360208110156101c957600080fd5b5035600160a060020a03166103bd565b3480156101e557600080fd5b506100fb600480360360208110156101fc57600080fd5b50356103d8565b34801561020f57600080fd5b506101556004803603604081101561022657600080fd5b508035906020013561040f565b34801561023f57600080fd5b506100fb6004803603602081101561025657600080fd5b5035610413565b34801561026957600080fd5b506100fb6004803603602081101561028057600080fd5b503561044a565b34801561029357600080fd5b50610155600480360360208110156102aa57600080fd5b5035600160a060020a031661046a565b600160a060020a0383166000908152602081905260408120548211156102e25750600061034b565b600160a060020a0380851660008181526020818152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060015b9392505050565b600154600160a060020a031690565b60025460009061037990600160a060020a031661046a565b905090565b600254600160a060020a031690565b60035460009061037990600160a060020a031661046a565b60015460009061037990600160a060020a031661046a565b60006103d26103cb8361046a565b600261040f565b92915050565b600154600090600160a060020a031633146103f257600080fd5b6001546003546103d291600160a060020a039081169116846102ba565b0290565b600154600090600160a060020a0316331461042d57600080fd5b6001546002546103d291600160a060020a039081169116846102ba565b6002546001546000916103d291600160a060020a039182169116846102ba565b600160a060020a03166000908152602081905260409020549056fea165627a7a7230582096c8b904e95cc71871f1fedf319c882273a6e1e480341952096c8e852853b7ff0029'

# print(abi)
# print(bytecode)


genesis_block = {
    'prev_hash': None,
    'author': 'グエン　ゴック　ナム',
    'content': 'Genesis Block',
    'timestamp': datetime.now(tz=None),
}

# https://www.ibm.com/developerworks/cloud/library/cl-develop-blockchain-app-in-python/index.html
# https://github.com/satwikkansal/python_blockchain_app


w3 = Web3(HTTPProvider('http://127.0.0.1:7545'))
w3.eth.defaultAccount = w3.eth.accounts[0]
owner = w3.eth.defaultAccount

NanoCoin = w3.eth.contract(abi=abi, bytecode=bytecode)

tx_hash = NanoCoin.constructor().transact()
# tx_hash = b'\x95\x86\xf4i\x8d\xdde\xd5\x8bg\xdbO\xf4\x07\xfb*e3\xac\xd8\xb5\xce2\xc2\x93\x9a\xb3\xa1\x94\x1dv:'

print("tx_hash: ")
print(tx_hash)

# exit(0);

tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)
contract = w3.eth.contract(
    address=tx_receipt.contractAddress,
    abi=abi
)

contract.functions.sendToMetaMask(amount=100000).transact()
tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)
print(contract.functions.getMetaMaskBalance().call())

# partner_1 = w3.eth.accounts[1]
# partner_2 = w3.eth.accounts[2]
# print(owner)
# print(partner_1)
# print(partner_2)
#
# contract_dir = os.path.abspath('./contracts/')
# print(contract_dir)

# greeter_interface = ContractInterface(w3, 'Greeter', contract_dir)
